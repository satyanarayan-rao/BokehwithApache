{"version":3,"sources":["src/js/plugin-prelude.js","build/js/tree/api.js","build/js/tree/api/charts.js","build/js/tree/api/linalg.js","build/js/tree/api/models.js","build/js/tree/api/plotting.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbndA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACltfile":"bokeh-api.js","sourceRoot":"/source/","sourcesContent":["(function outer(modules, cache, entry) {\n  if (typeof Bokeh !== \"undefined\") {\n    var _ = Bokeh._;\n\n    for (var name in modules) {\n      Bokeh.require.modules[name] = modules[name];\n    }\n\n    for (var i = 0; i < entry.length; i++) {\n        var exports = Bokeh.require(entry[i]);\n\n        if (_.isObject(exports.models)) {\n          Bokeh.Models.register_locations(exports.models);\n        }\n\n        _.extend(Bokeh, _.omit(exports, \"models\"));\n    }\n  } else {\n    throw new Error(\"Cannot find Bokeh. You have to load it prior to loading plugins.\");\n  }\n})\n","var _;\n\n_ = require(\"underscore\");\n\nmodule.exports = {\n  LinAlg: require(\"./api/linalg\"),\n  Charts: require(\"./api/charts\"),\n  Plotting: require(\"./api/plotting\"),\n  Document: require(\"./document\").Document,\n  sprintf: require(\"sprintf\")\n};\n\n_.extend(module.exports, require(\"./api/models\"));\n","var $, Document, _, bar, cumsum, embed, hexcolor2rgb, is_dark, models, num2hexcolor, palettes, pie, sprintf, sum;\n\n_ = require(\"underscore\");\n\n$ = require(\"jquery\");\n\nsprintf = require(\"sprintf\");\n\nDocument = require(\"../document\").Document;\n\nembed = require(\"../embed\");\n\nmodels = require(\"./models\");\n\npalettes = require(\"../palettes/palettes\");\n\nsum = function(array) {\n  return array.reduce(((function(_this) {\n    return function(a, b) {\n      return a + b;\n    };\n  })(this)), 0);\n};\n\ncumsum = function(array) {\n  var result;\n  result = [];\n  array.reduce((function(a, b, i) {\n    return result[i] = a + b;\n  }), 0);\n  return result;\n};\n\nnum2hexcolor = function(num) {\n  return sprintf(\"#%06x\", num);\n};\n\nhexcolor2rgb = function(color) {\n  var b, g, r;\n  r = parseInt(color.substr(1, 2), 16);\n  g = parseInt(color.substr(3, 2), 16);\n  b = parseInt(color.substr(5, 2), 16);\n  return [r, g, b];\n};\n\nis_dark = function(arg) {\n  var b, g, l, r;\n  r = arg[0], g = arg[1], b = arg[2];\n  l = 1 - (0.299 * r + 0.587 * g + 0.114 * b) / 255;\n  return l >= 0.6;\n};\n\npie = function(data, opts) {\n  var angle_span, colors, cumulative_values, cx, cy, end_angle, end_angles, g1, g2, h1, half_angles, half_radius, hover, i, inner_radius, k, labels, normalized_values, outer_radius, palette, plot, r1, r2, ref, ref1, ref2, ref3, ref4, ref5, ref6, ref7, source, start_angle, start_angles, text_angles, text_colors, text_cx, text_cy, to_cartesian, to_radians, tooltip, total_value, values, xdr, ydr;\n  if (opts == null) {\n    opts = {};\n  }\n  labels = [];\n  values = [];\n  for (i = k = 0, ref = Math.min(data.labels.length, data.values.length); 0 <= ref ? k < ref : k > ref; i = 0 <= ref ? ++k : --k) {\n    if (data.values[i] > 0) {\n      labels.push(data.labels[i]);\n      values.push(data.values[i]);\n    }\n  }\n  start_angle = (ref1 = opts.start_angle) != null ? ref1 : 0;\n  end_angle = (ref2 = opts.end_angle) != null ? ref2 : start_angle + 2 * Math.PI;\n  angle_span = Math.abs(end_angle - start_angle);\n  to_radians = function(x) {\n    return angle_span * x;\n  };\n  total_value = sum(values);\n  normalized_values = values.map(function(v) {\n    return v / total_value;\n  });\n  cumulative_values = cumsum(normalized_values);\n  end_angles = cumulative_values.map(function(v) {\n    return start_angle + to_radians(v);\n  });\n  start_angles = [start_angle].concat(end_angles.slice(0, -1));\n  half_angles = _.zip(start_angles, end_angles).map((function(_this) {\n    return function(arg) {\n      var end, start;\n      start = arg[0], end = arg[1];\n      return (start + end) / 2;\n    };\n  })(this));\n  if (opts.center == null) {\n    cx = 0;\n    cy = 0;\n  } else if (_.isArray(opts.center)) {\n    cx = opts.center[0];\n    cy = opts.center[1];\n  } else {\n    cx = opts.center.x;\n    cy = opts.center.y;\n  }\n  inner_radius = (ref3 = opts.inner_radius) != null ? ref3 : 0;\n  outer_radius = (ref4 = opts.outer_radius) != null ? ref4 : 1;\n  if (_.isArray(opts.palette)) {\n    palette = opts.palette;\n  } else {\n    palette = palettes[(ref5 = opts.palette) != null ? ref5 : \"Spectral11\"].map(num2hexcolor);\n  }\n  colors = (function() {\n    var m, ref6, results;\n    results = [];\n    for (i = m = 0, ref6 = normalized_values.length; 0 <= ref6 ? m < ref6 : m > ref6; i = 0 <= ref6 ? ++m : --m) {\n      results.push(palette[i % palette.length]);\n    }\n    return results;\n  })();\n  text_colors = colors.map(function(c) {\n    if (is_dark(hexcolor2rgb(c))) {\n      return \"white\";\n    } else {\n      return \"black\";\n    }\n  });\n  to_cartesian = function(r, alpha) {\n    return [r * Math.cos(alpha), r * Math.sin(alpha)];\n  };\n  half_radius = (inner_radius + outer_radius) / 2;\n  ref6 = _.unzip(half_angles.map((function(_this) {\n    return function(half_angle) {\n      return to_cartesian(half_radius, half_angle);\n    };\n  })(this))), text_cx = ref6[0], text_cy = ref6[1];\n  text_cx = text_cx.map(function(x) {\n    return x + cx;\n  });\n  text_cy = text_cy.map(function(y) {\n    return y + cy;\n  });\n  text_angles = half_angles.map(function(a) {\n    if (a >= Math.PI / 2 && a <= 3 * Math.PI / 2) {\n      return a + Math.PI;\n    } else {\n      return a;\n    }\n  });\n  source = new Bokeh.ColumnDataSource({\n    data: {\n      labels: labels,\n      values: values,\n      percentages: normalized_values.map((function(_this) {\n        return function(v) {\n          return sprintf(\"%.2f%%\", v * 100);\n        };\n      })(this)),\n      start_angles: start_angles,\n      end_angles: end_angles,\n      text_angles: text_angles,\n      colors: colors,\n      text_colors: text_colors,\n      text_cx: text_cx,\n      text_cy: text_cy\n    }\n  });\n  g1 = new models.AnnularWedge({\n    x: cx,\n    y: cy,\n    inner_radius: inner_radius,\n    outer_radius: outer_radius,\n    start_angle: {\n      field: \"start_angles\"\n    },\n    end_angle: {\n      field: \"end_angles\"\n    },\n    line_color: null,\n    line_width: 1,\n    fill_color: {\n      field: \"colors\"\n    }\n  });\n  h1 = new models.AnnularWedge({\n    x: cx,\n    y: cy,\n    inner_radius: inner_radius,\n    outer_radius: outer_radius,\n    start_angle: {\n      field: \"start_angles\"\n    },\n    end_angle: {\n      field: \"end_angles\"\n    },\n    line_color: null,\n    line_width: 1,\n    fill_color: {\n      field: \"colors\"\n    },\n    fill_alpha: 0.8\n  });\n  r1 = new models.GlyphRenderer({\n    data_source: source,\n    glyph: g1,\n    hover_glyph: h1\n  });\n  g2 = new models.Text({\n    x: {\n      field: \"text_cx\"\n    },\n    y: {\n      field: \"text_cy\"\n    },\n    text: {\n      field: (ref7 = opts.slice_labels) != null ? ref7 : \"labels\"\n    },\n    angle: {\n      field: \"text_angles\"\n    },\n    text_align: \"center\",\n    text_baseline: \"middle\",\n    text_color: {\n      field: \"text_colors\"\n    },\n    text_font_size: \"9pt\"\n  });\n  r2 = new models.GlyphRenderer({\n    data_source: source,\n    glyph: g2\n  });\n  xdr = new models.DataRange1d({\n    renderers: [r1],\n    range_padding: 0.2\n  });\n  ydr = new models.DataRange1d({\n    renderers: [r1],\n    range_padding: 0.2\n  });\n  plot = new models.Plot({\n    x_range: xdr,\n    y_range: ydr\n  });\n  if (opts.width != null) {\n    plot.plot_width = opts.width;\n  }\n  if (opts.height != null) {\n    plot.plot_height = opts.height;\n  }\n  plot.add_renderers(r1, r2);\n  tooltip = \"<div>@labels</div><div><b>@values</b> (@percentages)</div>\";\n  hover = new models.HoverTool({\n    renderers: [r1],\n    tooltips: tooltip\n  });\n  plot.add_tools(hover);\n  return plot;\n};\n\nbar = function(data, opts) {\n  var anchor, attachment, bottom, column_names, columns, dy, g1, hover, i, j, k, label, labels, left, len, len1, len2, len3, len4, m, n, name, o, orientation, p, palette, plot, q, r, r1, ref, ref1, ref2, ref3, ref4, ref5, ref6, ref7, ref8, renderers, right, row, rows, s, source, stacked, tooltip, top, v, xaxis, xdr, xformatter, yaxis, ydr;\n  if (opts == null) {\n    opts = {};\n  }\n  column_names = data[0];\n  rows = data.slice(1);\n  columns = (function() {\n    var k, len, results;\n    results = [];\n    for (k = 0, len = column_names.length; k < len; k++) {\n      name = column_names[k];\n      results.push([]);\n    }\n    return results;\n  })();\n  for (k = 0, len = rows.length; k < len; k++) {\n    row = rows[k];\n    for (i = m = 0, len1 = row.length; m < len1; i = ++m) {\n      v = row[i];\n      columns[i].push(v);\n    }\n  }\n  labels = _.map(columns[0], function(v) {\n    return v.toString();\n  });\n  columns = columns.slice(1);\n  yaxis = new models.CategoricalAxis();\n  ydr = new models.FactorRange({\n    factors: labels\n  });\n  if (opts.axis_number_format != null) {\n    xformatter = new models.NumeralTickFormatter({\n      format: opts.axis_number_format\n    });\n  } else {\n    xformatter = new models.BasicTickFormatter();\n  }\n  xaxis = new models.LinearAxis({\n    formatter: xformatter\n  });\n  xdr = new models.DataRange1d({\n    start: 0\n  });\n  if (_.isArray(opts.palette)) {\n    palette = opts.palette;\n  } else {\n    palette = palettes[(ref = opts.palette) != null ? ref : \"Spectral11\"].map(num2hexcolor);\n  }\n  stacked = (ref1 = opts.stacked) != null ? ref1 : false;\n  orientation = (ref2 = opts.orientation) != null ? ref2 : \"horizontal\";\n  renderers = [];\n  if (stacked) {\n    left = [];\n    right = [];\n    for (i = n = 0, ref3 = columns.length; 0 <= ref3 ? n < ref3 : n > ref3; i = 0 <= ref3 ? ++n : --n) {\n      bottom = [];\n      top = [];\n      for (j = o = 0, len2 = labels.length; o < len2; j = ++o) {\n        label = labels[j];\n        if (i === 0) {\n          left.push(0);\n          right.push(columns[i][j]);\n        } else {\n          left[j] += columns[i - 1][j];\n          right[j] += columns[i][j];\n        }\n        bottom.push(label + \":0\");\n        top.push(label + \":1\");\n      }\n      source = new Bokeh.ColumnDataSource({\n        data: {\n          left: _.clone(left),\n          right: _.clone(right),\n          top: top,\n          bottom: bottom,\n          labels: labels,\n          values: columns[i],\n          columns: (function() {\n            var len3, p, ref4, results;\n            ref4 = columns[i];\n            results = [];\n            for (p = 0, len3 = ref4.length; p < len3; p++) {\n              v = ref4[p];\n              results.push(column_names[i + 1]);\n            }\n            return results;\n          })()\n        }\n      });\n      g1 = new models.Quad({\n        left: {\n          field: \"left\"\n        },\n        bottom: {\n          field: \"bottom\"\n        },\n        right: {\n          field: \"right\"\n        },\n        top: {\n          field: \"top\"\n        },\n        line_color: null,\n        fill_color: palette[i % palette.length]\n      });\n      r1 = new models.GlyphRenderer({\n        data_source: source,\n        glyph: g1\n      });\n      renderers.push(r1);\n    }\n  } else {\n    dy = 1 / columns.length;\n    for (i = p = 0, ref4 = columns.length; 0 <= ref4 ? p < ref4 : p > ref4; i = 0 <= ref4 ? ++p : --p) {\n      left = [];\n      right = [];\n      bottom = [];\n      top = [];\n      for (j = q = 0, len3 = labels.length; q < len3; j = ++q) {\n        label = labels[j];\n        left.push(0);\n        right.push(columns[i][j]);\n        bottom.push(label + \":\" + (i * dy));\n        top.push(label + \":\" + ((i + 1) * dy));\n      }\n      source = new Bokeh.ColumnDataSource({\n        data: {\n          left: left,\n          right: right,\n          top: top,\n          bottom: bottom,\n          labels: labels,\n          values: columns[i],\n          columns: (function() {\n            var len4, ref5, results, s;\n            ref5 = columns[i];\n            results = [];\n            for (s = 0, len4 = ref5.length; s < len4; s++) {\n              v = ref5[s];\n              results.push(column_names[i + 1]);\n            }\n            return results;\n          })()\n        }\n      });\n      g1 = new models.Quad({\n        left: {\n          field: \"left\"\n        },\n        bottom: {\n          field: \"bottom\"\n        },\n        right: {\n          field: \"right\"\n        },\n        top: {\n          field: \"top\"\n        },\n        line_color: null,\n        fill_color: palette[i % palette.length]\n      });\n      r1 = new models.GlyphRenderer({\n        data_source: source,\n        glyph: g1\n      });\n      renderers.push(r1);\n    }\n  }\n  if (orientation === \"vertical\") {\n    ref5 = [ydr, xdr], xdr = ref5[0], ydr = ref5[1];\n    ref6 = [yaxis, xaxis], xaxis = ref6[0], yaxis = ref6[1];\n    for (s = 0, len4 = renderers.length; s < len4; s++) {\n      r = renderers[s];\n      data = r.data_source.data;\n      ref7 = [data.bottom, data.left], data.left = ref7[0], data.bottom = ref7[1];\n      ref8 = [data.top, data.right], data.right = ref8[0], data.top = ref8[1];\n    }\n  }\n  plot = new models.Plot({\n    x_range: xdr,\n    y_range: ydr\n  });\n  if (opts.width != null) {\n    plot.plot_width = opts.width;\n  }\n  if (opts.height != null) {\n    plot.plot_height = opts.height;\n  }\n  plot.add_renderers.apply(plot, renderers);\n  plot.add_layout(yaxis, \"left\");\n  plot.add_layout(xaxis, \"below\");\n  tooltip = \"<div>@labels</div><div>@columns:&nbsp<b>@values</b></div>\";\n  if (orientation === \"horizontal\") {\n    anchor = \"right_center\";\n    attachment = \"horizontal\";\n  } else {\n    anchor = \"top_center\";\n    attachment = \"vertical\";\n  }\n  hover = new models.HoverTool({\n    renderers: renderers,\n    tooltips: tooltip,\n    point_policy: \"snap_to_data\",\n    anchor: anchor,\n    attachment: attachment,\n    show_arrow: opts.show_arrow\n  });\n  plot.add_tools(hover);\n  return plot;\n};\n\nmodule.exports = {\n  pie: pie,\n  bar: bar\n};\n","\"use strict\";\nfunction transpose(array) {\n    var rows = array.length;\n    var cols = array[0].length;\n    var transposed = [];\n    for (var j = 0; j < cols; j++) {\n        transposed[j] = [];\n        for (var i = 0; i < rows; i++) {\n            transposed[j][i] = array[i][j];\n        }\n    }\n    return transposed;\n}\nexports.transpose = transpose;\nfunction linspace(start, stop, num) {\n    if (num === void 0) { num = 100; }\n    var step = (stop - start) / (num - 1);\n    var array = new Array(num);\n    for (var i = 0; i < num; i++) {\n        array[i] = start + step * i;\n    }\n    return array;\n}\nexports.linspace = linspace;\nfunction arange(start, stop, step) {\n    if (step === void 0) { step = 1; }\n    var num = Math.ceil((stop - start) / step);\n    var array = new Array(num);\n    for (var i = 0; i < num; i++) {\n        array[i] = start + step * i;\n    }\n    return array;\n}\nexports.arange = arange;\n","module.exports = {\n  Arrow: require(\"../models/annotations/arrow\").Model,\n  OpenHead: require(\"../models/annotations/arrow_head\").OpenHead,\n  NormalHead: require(\"../models/annotations/arrow_head\").NormalHead,\n  VeeHead: require(\"../models/annotations/arrow_head\").VeeHead,\n  BoxAnnotation: require(\"../models/annotations/box_annotation\").Model,\n  ColorBar: require(\"../models/annotations/color_bar\").Model,\n  Label: require(\"../models/annotations/label\").Model,\n  LabelSet: require(\"../models/annotations/label_set\").Model,\n  Legend: require(\"../models/annotations/legend\").Model,\n  PolyAnnotation: require(\"../models/annotations/poly_annotation\").Model,\n  Span: require(\"../models/annotations/span\").Model,\n  Title: require(\"../models/annotations/title\").Model,\n  Tooltip: require(\"../models/annotations/tooltip\").Model,\n  Axis: require(\"../models/axes/axis\").Model,\n  ContinuousAxis: require(\"../models/axes/continuous_axis\").Model,\n  LinearAxis: require(\"../models/axes/linear_axis\").Model,\n  LogAxis: require(\"../models/axes/log_axis\").Model,\n  CategoricalAxis: require(\"../models/axes/categorical_axis\").Model,\n  DatetimeAxis: require(\"../models/axes/datetime_axis\").Model,\n  OpenURL: require(\"../models/callbacks/open_url\").Model,\n  CustomJS: require(\"../models/callbacks/customjs\").Model,\n  TickFormatter: require(\"../models/formatters/tick_formatter\").Model,\n  BasicTickFormatter: require(\"../models/formatters/basic_tick_formatter\").Model,\n  LogTickFormatter: require(\"../models/formatters/basic_tick_formatter\").Model,\n  CategoricalTickFormatter: require(\"../models/formatters/categorical_tick_formatter\").Model,\n  DatetimeTickFormatter: require(\"../models/formatters/datetime_tick_formatter\").Model,\n  FuncTickFormatter: require(\"../models/formatters/func_tick_formatter\").Model,\n  NumeralTickFormatter: require(\"../models/formatters/numeral_tick_formatter\").Model,\n  PrintfTickFormatter: require(\"../models/formatters/printf_tick_formatter\").Model,\n  Glyph: require(\"../models/glyphs/glyph\").Model,\n  AnnularWedge: require(\"../models/glyphs/annular_wedge\").Model,\n  Annulus: require(\"../models/glyphs/annulus\").Model,\n  Arc: require(\"../models/glyphs/arc\").Model,\n  Bezier: require(\"../models/glyphs/bezier\").Model,\n  Circle: require(\"../models/glyphs/circle\").Model,\n  Ellipse: require(\"../models/glyphs/ellipse\").Model,\n  ImageRGBA: require(\"../models/glyphs/image_rgba\").Model,\n  Image: require(\"../models/glyphs/image\").Model,\n  ImageURL: require(\"../models/glyphs/image_url\").Model,\n  Line: require(\"../models/glyphs/line\").Model,\n  MultiLine: require(\"../models/glyphs/multi_line\").Model,\n  Oval: require(\"../models/glyphs/oval\").Model,\n  Patch: require(\"../models/glyphs/patch\").Model,\n  Patches: require(\"../models/glyphs/patches\").Model,\n  Quad: require(\"../models/glyphs/quad\").Model,\n  Quadratic: require(\"../models/glyphs/quadratic\").Model,\n  Ray: require(\"../models/glyphs/ray\").Model,\n  Rect: require(\"../models/glyphs/rect\").Model,\n  Segment: require(\"../models/glyphs/segment\").Model,\n  Text: require(\"../models/glyphs/text\").Model,\n  Wedge: require(\"../models/glyphs/wedge\").Model,\n  Gear: require(\"../models/glyphs/gear\").Model,\n  Grid: require(\"../models/grids/grid\").Model,\n  ImageSource: require(\"../models/tiles/image_source\").Model,\n  LayoutDOM: require(\"../models/layouts/layout_dom\").Model,\n  Row: require(\"../models/layouts/row\").Model,\n  Column: require(\"../models/layouts/column\").Model,\n  Spacer: require(\"../models/layouts/spacer\").Model,\n  WidgetBox: require(\"../models/layouts/widget_box\").Model,\n  GMapPlot: require(\"../models/plots/gmap_plot\").Model,\n  LinearColorMapper: require(\"../models/mappers/linear_color_mapper\").Model,\n  markers: [require('../models/markers/index')],\n  Model: require(\"../model\").Model,\n  Plot: require(\"../models/plots/plot\").Model,\n  Range: require(\"../models/ranges/range\").Model,\n  Range1d: require(\"../models/ranges/range1d\").Model,\n  DataRange: require(\"../models/ranges/data_range\").Model,\n  DataRange1d: require(\"../models/ranges/data_range1d\").Model,\n  FactorRange: require(\"../models/ranges/factor_range\").Model,\n  Renderer: require(\"../models/renderers/renderer\").Model,\n  TileRenderer: require(\"../models/tiles/tile_renderer\").Model,\n  DynamicImageRenderer: require(\"../models/tiles/dynamic_image_renderer\").Model,\n  GlyphRenderer: require(\"../models/renderers/glyph_renderer\").Model,\n  GuideRenderer: require(\"../models/renderers/guide_renderer\").Model,\n  DataSource: require(\"../models/sources/data_source\").Model,\n  ColumnDataSource: require(\"../models/sources/column_data_source\").Model,\n  AjaxDataSource: require(\"../models/sources/ajax_data_source\").Model,\n  Ticker: require(\"../models/tickers/ticker\").Model,\n  ContinuousTicker: require(\"../models/tickers/continuous_ticker\").Model,\n  FixedTicker: require(\"../models/tickers/fixed_ticker\").Model,\n  AdaptiveTicker: require(\"../models/tickers/adaptive_ticker\").Model,\n  CompositeTicker: require(\"../models/tickers/composite_ticker\").Model,\n  SingleIntervalTicker: require(\"../models/tickers/single_interval_ticker\").Model,\n  DaysTicker: require(\"../models/tickers/days_ticker\").Model,\n  MonthsTicker: require(\"../models/tickers/months_ticker\").Model,\n  YearsTicker: require(\"../models/tickers/years_ticker\").Model,\n  BasicTicker: require(\"../models/tickers/basic_ticker\").Model,\n  LogTicker: require(\"../models/tickers/log_ticker\").Model,\n  CategoricalTicker: require(\"../models/tickers/categorical_ticker\").Model,\n  DatetimeTicker: require(\"../models/tickers/datetime_ticker\").Model,\n  TileSource: require(\"../models/tiles/tile_source\").Model,\n  MercatorTileSource: require(\"../models/tiles/mercator_tile_source\").Model,\n  TMSTileSource: require(\"../models/tiles/tms_tile_source\").Model,\n  WMTSTileSource: require(\"../models/tiles/wmts_tile_source\").Model,\n  QUADKEYTileSource: require(\"../models/tiles/quadkey_tile_source\").Model,\n  BBoxTileSource: require(\"../models/tiles/bbox_tile_source\").Model,\n  ToolbarBase: require(\"../models/tools/toolbar_base\").Model,\n  Toolbar: require(\"../models/tools/toolbar\").Model,\n  ToolbarBox: require(\"../models/tools/toolbar_box\").Model,\n  ToolEvents: require(\"../common/tool_events\").Model,\n  Tool: require(\"../models/tools/tool\").Model,\n  PanTool: require(\"../models/tools/gestures/pan_tool\").Model,\n  WheelZoomTool: require(\"../models/tools/gestures/wheel_zoom_tool\").Model,\n  SaveTool: require(\"../models/tools/actions/save_tool\").Model,\n  UndoTool: require(\"../models/tools/actions/undo_tool\").Model,\n  RedoTool: require(\"../models/tools/actions/redo_tool\").Model,\n  ResetTool: require(\"../models/tools/actions/reset_tool\").Model,\n  ResizeTool: require(\"../models/tools/gestures/resize_tool\").Model,\n  CrosshairTool: require(\"../models/tools/inspectors/crosshair_tool\").Model,\n  BoxZoomTool: require(\"../models/tools/gestures/box_zoom_tool\").Model,\n  BoxSelectTool: require(\"../models/tools/gestures/box_select_tool\").Model,\n  LassoSelectTool: require(\"../models/tools/gestures/lasso_select_tool\").Model,\n  PolySelectTool: require(\"../models/tools/gestures/poly_select_tool\").Model,\n  TapTool: require(\"../models/tools/gestures/tap_tool\").Model,\n  HoverTool: require(\"../models/tools/inspectors/hover_tool\").Model,\n  HelpTool: require(\"../models/tools/actions/help_tool\").Model\n};\n","var $, BOKEH_ROOT, Document, Figure, _, _default_tools, _default_tooltips, _known_tools, _with_default, color, embed, figure, gridplot, models, show, sprintf,\n  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  hasProp = {}.hasOwnProperty,\n  slice = [].slice;\n\n_ = require(\"underscore\");\n\n$ = require(\"jquery\");\n\nsprintf = require(\"sprintf\");\n\nDocument = require(\"../document\").Document;\n\nembed = require(\"../embed\");\n\nBOKEH_ROOT = require(\"../embed\").BOKEH_ROOT;\n\nmodels = require(\"./models\");\n\n_default_tooltips = [[\"index\", \"$index\"], [\"data (x, y)\", \"($x, $y)\"], [\"canvas (x, y)\", \"($sx, $sy)\"]];\n\n_default_tools = \"pan,wheel_zoom,box_zoom,save,reset,help\";\n\n_known_tools = {\n  pan: function(plot) {\n    return new models.PanTool({\n      plot: plot,\n      dimensions: [\"width\", \"height\"]\n    });\n  },\n  xpan: function(plot) {\n    return new models.PanTool({\n      plot: plot,\n      dimensions: [\"width\"]\n    });\n  },\n  ypan: function(plot) {\n    return new models.PanTool({\n      plot: plot,\n      dimensions: [\"height\"]\n    });\n  },\n  wheel_zoom: function(plot) {\n    return new models.WheelZoomTool({\n      plot: plot,\n      dimensions: [\"width\", \"height\"]\n    });\n  },\n  xwheel_zoom: function(plot) {\n    return new models.WheelZoomTool({\n      plot: plot,\n      dimensions: [\"width\"]\n    });\n  },\n  ywheel_zoom: function(plot) {\n    return new models.WheelZoomTool({\n      plot: plot,\n      dimensions: [\"height\"]\n    });\n  },\n  resize: function(plot) {\n    return new models.ResizeTool({\n      plot: plot\n    });\n  },\n  click: function(plot) {\n    return new models.TapTool({\n      plot: plot,\n      behavior: \"inspect\"\n    });\n  },\n  tap: function(plot) {\n    return new models.TapTool({\n      plot: plot\n    });\n  },\n  crosshair: function(plot) {\n    return new models.CrosshairTool({\n      plot: plot\n    });\n  },\n  box_select: function(plot) {\n    return new models.BoxSelectTool({\n      plot: plot\n    });\n  },\n  xbox_select: function(plot) {\n    return new models.BoxSelectTool({\n      plot: plot,\n      dimensions: ['width']\n    });\n  },\n  ybox_select: function(plot) {\n    return new models.BoxSelectTool({\n      plot: plot,\n      dimensions: ['height']\n    });\n  },\n  poly_select: function(plot) {\n    return new models.PolySelectTool({\n      plot: plot\n    });\n  },\n  lasso_select: function(plot) {\n    return new models.LassoSelectTool({\n      plot: plot\n    });\n  },\n  box_zoom: function(plot) {\n    return new models.BoxZoomTool({\n      plot: plot,\n      dimensions: ['width', 'height']\n    });\n  },\n  xbox_zoom: function(plot) {\n    return new models.BoxZoomTool({\n      plot: plot,\n      dimensions: ['width']\n    });\n  },\n  ybox_zoom: function(plot) {\n    return new models.BoxZoomTool({\n      plot: plot,\n      dimensions: ['height']\n    });\n  },\n  hover: function(plot) {\n    return new models.HoverTool({\n      plot: plot,\n      tooltips: _default_tooltips\n    });\n  },\n  save: function(plot) {\n    return new models.SaveTool({\n      plot: plot\n    });\n  },\n  previewsave: function(plot) {\n    return new models.SaveTool({\n      plot: plot\n    });\n  },\n  undo: function(plot) {\n    return new models.UndoTool({\n      plot: plot\n    });\n  },\n  redo: function(plot) {\n    return new models.RedoTool({\n      plot: plot\n    });\n  },\n  reset: function(plot) {\n    return new models.ResetTool({\n      plot: plot\n    });\n  },\n  help: function(plot) {\n    return new models.HelpTool({\n      plot: plot\n    });\n  }\n};\n\n_with_default = function(value, default_value) {\n  if (value === void 0) {\n    return default_value;\n  } else {\n    return value;\n  }\n};\n\nFigure = (function(superClass) {\n  extend(Figure, superClass);\n\n  function Figure(attributes, options) {\n    var attrs, ref, ref1, ref2, ref3, ref4, ref5, tools, x_axis_label, x_axis_location, x_axis_type, x_minor_ticks, y_axis_label, y_axis_location, y_axis_type, y_minor_ticks;\n    if (attributes == null) {\n      attributes = {};\n    }\n    if (options == null) {\n      options = {};\n    }\n    attrs = _.clone(attributes);\n    tools = _with_default(attrs.tools, _default_tools);\n    delete attrs.tools;\n    attrs.x_range = this._get_range(attrs.x_range);\n    attrs.y_range = this._get_range(attrs.y_range);\n    x_axis_type = _.isUndefined(attrs.x_axis_type) ? \"auto\" : attrs.x_axis_type;\n    y_axis_type = _.isUndefined(attrs.y_axis_type) ? \"auto\" : attrs.y_axis_type;\n    delete attrs.x_axis_type;\n    delete attrs.y_axis_type;\n    x_minor_ticks = (ref = attrs.x_minor_ticks) != null ? ref : \"auto\";\n    y_minor_ticks = (ref1 = attrs.y_minor_ticks) != null ? ref1 : \"auto\";\n    delete attrs.x_minor_ticks;\n    delete attrs.y_minor_ticks;\n    x_axis_location = (ref2 = attrs.x_axis_location) != null ? ref2 : \"below\";\n    y_axis_location = (ref3 = attrs.y_axis_location) != null ? ref3 : \"left\";\n    delete attrs.x_axis_location;\n    delete attrs.y_axis_location;\n    x_axis_label = (ref4 = attrs.x_axis_label) != null ? ref4 : \"\";\n    y_axis_label = (ref5 = attrs.y_axis_label) != null ? ref5 : \"\";\n    delete attrs.x_axis_label;\n    delete attrs.y_axis_label;\n    if (!_.isUndefined(attrs.width)) {\n      if (_.isUndefined(attrs.plot_width)) {\n        attrs.plot_width = attrs.width;\n      } else {\n        throw new Error(\"both 'width' and 'plot_width' can't be given at the same time\");\n      }\n      delete attrs.width;\n    }\n    if (!_.isUndefined(attrs.height)) {\n      if (_.isUndefined(attrs.plot_height)) {\n        attrs.plot_height = attrs.height;\n      } else {\n        throw new Error(\"both 'height' and 'plot_height' can't be given at the same time\");\n      }\n      delete attrs.height;\n    }\n    Figure.__super__.constructor.call(this, attrs, options);\n    this._process_guides(0, x_axis_type, x_axis_location, x_minor_ticks, x_axis_label);\n    this._process_guides(1, y_axis_type, y_axis_location, y_minor_ticks, y_axis_label);\n    this.add_tools.apply(this, this._process_tools(tools));\n    this._legend = new models.Legend({\n      plot: this\n    });\n    this.add_renderers(this._legend);\n  }\n\n  Object.defineProperty(Figure.prototype, \"xgrid\", {\n    get: function() {\n      return this.renderers.filter(function(r) {\n        return r instanceof models.Grid && r.dimension === 0;\n      })[0];\n    }\n  });\n\n  Object.defineProperty(Figure.prototype, \"ygrid\", {\n    get: function() {\n      return this.renderers.filter(function(r) {\n        return r instanceof models.Grid && r.dimension === 1;\n      })[0];\n    }\n  });\n\n  Object.defineProperty(Figure.prototype, \"xaxis\", {\n    get: function() {\n      return this.below.concat(this.above).filter(function(r) {\n        return r instanceof models.Axis;\n      })[0];\n    }\n  });\n\n  Object.defineProperty(Figure.prototype, \"yaxis\", {\n    get: function() {\n      return this.left.concat(this.right).filter(function(r) {\n        return r instanceof models.Axis;\n      })[0];\n    }\n  });\n\n  Figure.prototype.annular_wedge = function() {\n    var args;\n    args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    return this._glyph(models.AnnularWedge, \"x,y,inner_radius,outer_radius,start_angle,end_angle\", args);\n  };\n\n  Figure.prototype.annulus = function() {\n    var args;\n    args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    return this._glyph(models.Annulus, \"x,y,inner_radius,outer_radius\", args);\n  };\n\n  Figure.prototype.arc = function() {\n    var args;\n    args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    return this._glyph(models.Arc, \"x,y,radius,start_angle,end_angle\", args);\n  };\n\n  Figure.prototype.bezier = function() {\n    var args;\n    args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    return this._glyph(models.Bezier, \"x0,y0,x1,y1,cx0,cy0,cx1,cy1\", args);\n  };\n\n  Figure.prototype.ellipse = function() {\n    var args;\n    args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    return this._glyph(models.Ellipse, \"x,y,width,height\", args);\n  };\n\n  Figure.prototype.gear = function() {\n    var args;\n    args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    return this._glyph(models.Gear, \"x,y,module,teeth\", args);\n  };\n\n  Figure.prototype.image = function() {\n    var args;\n    args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    return this._glyph(models.Image, \"color_mapper,image,rows,cols,x,y,dw,dh\", args);\n  };\n\n  Figure.prototype.image_rgba = function() {\n    var args;\n    args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    return this._glyph(models.ImageRGBA, \"image,rows,cols,x,y,dw,dh\", args);\n  };\n\n  Figure.prototype.image_url = function() {\n    var args;\n    args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    return this._glyph(models.ImageURL, \"url,x,y,w,h\", args);\n  };\n\n  Figure.prototype.line = function() {\n    var args;\n    args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    return this._glyph(models.Line, \"x,y\", args);\n  };\n\n  Figure.prototype.multi_line = function() {\n    var args;\n    args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    return this._glyph(models.MultiLine, \"xs,ys\", args);\n  };\n\n  Figure.prototype.oval = function() {\n    var args;\n    args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    return this._glyph(models.Oval, \"x,y,width,height\", args);\n  };\n\n  Figure.prototype.patch = function() {\n    var args;\n    args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    return this._glyph(models.Patch, \"x,y\", args);\n  };\n\n  Figure.prototype.patches = function() {\n    var args;\n    args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    return this._glyph(models.Patches, \"xs,ys\", args);\n  };\n\n  Figure.prototype.quad = function() {\n    var args;\n    args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    return this._glyph(models.Quad, \"left,right,bottom,top\", args);\n  };\n\n  Figure.prototype.quadratic = function() {\n    var args;\n    args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    return this._glyph(models.Quadratic, \"x0,y0,x1,y1,cx,cy\", args);\n  };\n\n  Figure.prototype.ray = function() {\n    var args;\n    args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    return this._glyph(models.Ray, \"x,y,length\", args);\n  };\n\n  Figure.prototype.rect = function() {\n    var args;\n    args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    return this._glyph(models.Rect, \"x,y,width,height\", args);\n  };\n\n  Figure.prototype.segment = function() {\n    var args;\n    args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    return this._glyph(models.Segment, \"x0,y0,x1,y1\", args);\n  };\n\n  Figure.prototype.text = function() {\n    var args;\n    args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    return this._glyph(models.Text, \"x,y,text\", args);\n  };\n\n  Figure.prototype.wedge = function() {\n    var args;\n    args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    return this._glyph(models.Wedge, \"x,y,radius,start_angle,end_angle\", args);\n  };\n\n  Figure.prototype.asterisk = function() {\n    var args;\n    args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    return this._marker(models.Asterisk, args);\n  };\n\n  Figure.prototype.circle = function() {\n    var args;\n    args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    return this._marker(models.Circle, args);\n  };\n\n  Figure.prototype.circle_cross = function() {\n    var args;\n    args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    return this._marker(models.CircleCross, args);\n  };\n\n  Figure.prototype.circle_x = function() {\n    var args;\n    args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    return this._marker(models.CircleX, args);\n  };\n\n  Figure.prototype.cross = function() {\n    var args;\n    args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    return this._marker(models.Cross, args);\n  };\n\n  Figure.prototype.diamond = function() {\n    var args;\n    args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    return this._marker(models.Diamond, args);\n  };\n\n  Figure.prototype.diamond_cross = function() {\n    var args;\n    args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    return this._marker(models.DiamondCross, args);\n  };\n\n  Figure.prototype.inverted_triangle = function() {\n    var args;\n    args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    return this._marker(models.InvertedTriangle, args);\n  };\n\n  Figure.prototype.square = function() {\n    var args;\n    args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    return this._marker(models.Square, args);\n  };\n\n  Figure.prototype.square_cross = function() {\n    var args;\n    args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    return this._marker(models.SquareCross, args);\n  };\n\n  Figure.prototype.square_x = function() {\n    var args;\n    args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    return this._marker(models.SquareX, args);\n  };\n\n  Figure.prototype.triangle = function() {\n    var args;\n    args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    return this._marker(models.Triangle, args);\n  };\n\n  Figure.prototype.x = function() {\n    var args;\n    args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    return this._marker(models.X, args);\n  };\n\n  Figure.prototype._vectorable = [\"fill_color\", \"fill_alpha\", \"line_color\", \"line_alpha\", \"line_width\", \"text_color\", \"text_alpha\", \"text_font_size\"];\n\n  Figure.prototype._default_color = \"#1f77b4\";\n\n  Figure.prototype._default_alpha = 1.0;\n\n  Figure.prototype._pop_colors_and_alpha = function(cls, attrs, prefix, default_color, default_alpha) {\n    var _update_with, alpha, color, result;\n    if (prefix == null) {\n      prefix = \"\";\n    }\n    if (default_color == null) {\n      default_color = this._default_color;\n    }\n    if (default_alpha == null) {\n      default_alpha = this._default_alpha;\n    }\n    result = {};\n    color = _with_default(attrs[prefix + \"color\"], default_color);\n    alpha = _with_default(attrs[prefix + \"alpha\"], default_alpha);\n    delete attrs[prefix + \"color\"];\n    delete attrs[prefix + \"alpha\"];\n    _update_with = function(name, default_value) {\n      if (cls.prototype.props[name] != null) {\n        result[name] = _with_default(attrs[prefix + name], default_value);\n        return delete attrs[prefix + name];\n      }\n    };\n    _update_with(\"fill_color\", color);\n    _update_with(\"line_color\", color);\n    _update_with(\"text_color\", \"black\");\n    _update_with(\"fill_alpha\", alpha);\n    _update_with(\"line_alpha\", alpha);\n    _update_with(\"text_alpha\", alpha);\n    return result;\n  };\n\n  Figure.prototype._find_uniq_name = function(data, name) {\n    var i, new_name;\n    i = 1;\n    while (true) {\n      new_name = name + \"__\" + i;\n      if (data[new_name] != null) {\n        i += 1;\n      } else {\n        return new_name;\n      }\n    }\n  };\n\n  Figure.prototype._fixup_values = function(cls, data, attrs) {\n    var name, results, value;\n    results = [];\n    for (name in attrs) {\n      value = attrs[name];\n      results.push((function(_this) {\n        return function(name, value) {\n          var field, prop;\n          prop = cls.prototype.props[name];\n          if (prop != null) {\n            if (prop.type.prototype.dataspec) {\n              if (value != null) {\n                if (_.isArray(value)) {\n                  if (data[name] != null) {\n                    if (data[name] !== value) {\n                      field = _this._find_uniq_name(data, name);\n                      data[field] = value;\n                    } else {\n                      field = name;\n                    }\n                  } else {\n                    field = name;\n                    data[field] = value;\n                  }\n                  return attrs[name] = {\n                    field: field\n                  };\n                } else if (_.isNumber(value) || _.isString(value)) {\n                  return attrs[name] = {\n                    value: value\n                  };\n                }\n              }\n            }\n          }\n        };\n      })(this)(name, value));\n    }\n    return results;\n  };\n\n  Figure.prototype._glyph = function(cls, params, args) {\n    var _make_glyph, attrs, data, fn, glyph, glyph_ca, glyph_renderer, has_hglyph, has_sglyph, hglyph, hglyph_ca, i, j, k, legend, len, nsglyph, nsglyph_ca, opts, param, ref, ref1, sglyph, sglyph_ca, source;\n    params = params.split(\",\");\n    if (args.length === 1) {\n      attrs = args[0];\n      attrs = _.clone(attrs);\n    } else {\n      ref = args, args = 2 <= ref.length ? slice.call(ref, 0, j = ref.length - 1) : (j = 0, []), opts = ref[j++];\n      attrs = _.clone(opts);\n      fn = function(param, i) {\n        return attrs[param] = args[i];\n      };\n      for (i = k = 0, len = params.length; k < len; i = ++k) {\n        param = params[i];\n        fn(param, i);\n      }\n    }\n    legend = attrs.legend;\n    delete attrs.legend;\n    has_sglyph = _.any(_.keys(attrs), function(key) {\n      return key.startsWith(\"selection_\");\n    });\n    has_hglyph = _.any(_.keys(attrs), function(key) {\n      return key.startsWith(\"hover_\");\n    });\n    glyph_ca = this._pop_colors_and_alpha(cls, attrs);\n    nsglyph_ca = this._pop_colors_and_alpha(cls, attrs, \"nonselection_\", void 0, 0.1);\n    sglyph_ca = has_sglyph ? this._pop_colors_and_alpha(cls, attrs, \"selection_\") : {};\n    hglyph_ca = has_hglyph ? this._pop_colors_and_alpha(cls, attrs, \"hover_\") : {};\n    source = (ref1 = attrs.source) != null ? ref1 : new models.ColumnDataSource();\n    data = _.clone(source.data);\n    delete attrs.source;\n    this._fixup_values(cls, data, glyph_ca);\n    this._fixup_values(cls, data, nsglyph_ca);\n    this._fixup_values(cls, data, sglyph_ca);\n    this._fixup_values(cls, data, hglyph_ca);\n    this._fixup_values(cls, data, attrs);\n    source.data = data;\n    _make_glyph = (function(_this) {\n      return function(cls, attrs, extra_attrs) {\n        return new cls(_.extend({}, attrs, extra_attrs));\n      };\n    })(this);\n    glyph = _make_glyph(cls, attrs, glyph_ca);\n    nsglyph = _make_glyph(cls, attrs, nsglyph_ca);\n    sglyph = has_sglyph ? _make_glyph(cls, attrs, sglyph_ca) : null;\n    hglyph = has_hglyph ? _make_glyph(cls, attrs, hglyph_ca) : null;\n    glyph_renderer = new models.GlyphRenderer({\n      data_source: source,\n      glyph: glyph,\n      nonselection_glyph: nsglyph,\n      selection_glyph: sglyph,\n      hover_glyph: hglyph\n    });\n    if (legend != null) {\n      this._update_legend(legend, glyph_renderer);\n    }\n    this.add_renderers(glyph_renderer);\n    return glyph_renderer;\n  };\n\n  Figure.prototype._marker = function(cls, args) {\n    return this._glyph(cls, \"x,y\", args);\n  };\n\n  Figure.prototype._get_range = function(range) {\n    if (range == null) {\n      return new models.DataRange1d();\n    }\n    if (range instanceof models.Range) {\n      return range;\n    }\n    if (_.isArray(range)) {\n      if (_.all(function(x) {\n        var j, len, results;\n        results = [];\n        for (j = 0, len = range.length; j < len; j++) {\n          x = range[j];\n          results.push(_.isString(x));\n        }\n        return results;\n      })) {\n        return new models.FactorRange({\n          factors: range\n        });\n      }\n      if (range.length === 2) {\n        return new models.Range1d({\n          start: range[0],\n          end: range[1]\n        });\n      }\n    }\n  };\n\n  Figure.prototype._process_guides = function(dim, axis_type, axis_location, minor_ticks, axis_label) {\n    var axis, axiscls, grid, range;\n    range = dim === 0 ? this.x_range : this.y_range;\n    axiscls = this._get_axis_class(axis_type, range);\n    if (axiscls != null) {\n      if (axiscls === models.LogAxis) {\n        if (dim === 0) {\n          this.x_mapper_type = 'log';\n        } else {\n          this.y_mapper_type = 'log';\n        }\n      }\n      axis = new axiscls();\n      if (axis.ticker instanceof models.ContinuousTicker) {\n        axis.ticker.num_minor_ticks = this._get_num_minor_ticks(axiscls, minor_ticks);\n      }\n      if (axis_label.length !== 0) {\n        axis.axis_label = axis_label;\n      }\n      grid = new models.Grid({\n        dimension: dim,\n        ticker: axis.ticker\n      });\n      this.add_layout(axis, axis_location);\n      return this.add_layout(grid);\n    }\n  };\n\n  Figure.prototype._get_axis_class = function(axis_type, range) {\n    if (axis_type == null) {\n      return null;\n    }\n    if (axis_type === \"linear\") {\n      return models.LinearAxis;\n    }\n    if (axis_type === \"log\") {\n      return models.LogAxis;\n    }\n    if (axis_type === \"datetime\") {\n      return models.DatetimeAxis;\n    }\n    if (axis_type === \"auto\") {\n      if (range instanceof models.FactorRange) {\n        return models.CategoricalAxis;\n      } else {\n        return models.LinearAxis;\n      }\n    }\n  };\n\n  Figure.prototype._get_num_minor_ticks = function(axis_class, num_minor_ticks) {\n    if (_.isNumber(num_minor_ticks)) {\n      if (num_minor_ticks <= 1) {\n        throw new Error(\"num_minor_ticks must be > 1\");\n      }\n      return num_minor_ticks;\n    }\n    if (num_minor_ticks == null) {\n      return 0;\n    }\n    if (num_minor_ticks === 'auto') {\n      if (axis_class === models.LogAxis) {\n        return 10;\n      }\n      return 5;\n    }\n  };\n\n  Figure.prototype._process_tools = function(tools) {\n    var objs, tool;\n    if (_.isString(tools)) {\n      tools = tools.split(/\\s*,\\s*/);\n    }\n    objs = (function() {\n      var j, len, results;\n      results = [];\n      for (j = 0, len = tools.length; j < len; j++) {\n        tool = tools[j];\n        if (_.isString(tool)) {\n          results.push(_known_tools[tool](this));\n        } else {\n          results.push(tool);\n        }\n      }\n      return results;\n    }).call(this);\n    return objs;\n  };\n\n  Figure.prototype._update_legend = function(legend_name, glyph_renderer) {\n    var j, legends, len, name, ref, renderers;\n    legends = _.clone(this._legend.legends);\n    for (j = 0, len = legends.length; j < len; j++) {\n      ref = legends[j], name = ref[0], renderers = ref[1];\n      if (name === legend_name) {\n        renderers.push(glyph_renderer);\n        this._legend.legends = legends;\n        return;\n      }\n    }\n    legends.push([legend_name, [glyph_renderer]]);\n    return this._legend.legends = legends;\n  };\n\n  return Figure;\n\n})(models.Plot);\n\nfigure = function(attributes, options) {\n  if (attributes == null) {\n    attributes = {};\n  }\n  if (options == null) {\n    options = {};\n  }\n  return new Figure(attributes, options);\n};\n\nshow = function(obj, target) {\n  var _obj, div, doc, j, len, multiple, views;\n  multiple = _.isArray(obj);\n  doc = new Document();\n  if (!multiple) {\n    doc.add_root(obj);\n  } else {\n    for (j = 0, len = obj.length; j < len; j++) {\n      _obj = obj[j];\n      doc.add_root(_obj);\n    }\n  }\n  div = $(\"<div class=\" + BOKEH_ROOT + \">\");\n  $(target != null ? target : \"body\").append(div);\n  views = embed.add_document_standalone(doc, div);\n  if (!multiple) {\n    return views[obj.id];\n  } else {\n    return views;\n  }\n};\n\ncolor = function(r, g, b) {\n  return sprintf(\"#%02x%02x%02x\", r, g, b);\n};\n\ngridplot = function(children, options) {\n  var grid, item, j, k, l, layout, len, len1, len2, neighbor, row, row_children, row_tools, rows, sizing_mode, toolbar, toolbar_location, toolbar_sizing_mode, tools;\n  if (options == null) {\n    options = {};\n  }\n  toolbar_location = _.isUndefined(options.toolbar_location) ? 'above' : options.toolbar_location;\n  sizing_mode = _.isUndefined(options.sizing_mode) ? 'fixed' : options.sizing_mode;\n  toolbar_sizing_mode = options.sizing_mode === 'fixed' ? 'scale_width' : sizing_mode;\n  tools = [];\n  rows = [];\n  for (j = 0, len = children.length; j < len; j++) {\n    row = children[j];\n    row_tools = [];\n    row_children = [];\n    for (k = 0, len1 = row.length; k < len1; k++) {\n      item = row[k];\n      if (item instanceof models.Plot) {\n        row_tools = row_tools.concat(item.toolbar.tools);\n        item.toolbar_location = null;\n      }\n      if (item === null) {\n        for (l = 0, len2 = row.length; l < len2; l++) {\n          neighbor = row[l];\n          if (neighbor instanceof models.Plot) {\n            break;\n          }\n        }\n        item = new models.Spacer({\n          width: neighbor.plot_width,\n          height: neighbor.plot_height\n        });\n      }\n      if (item instanceof models.LayoutDOM) {\n        item.sizing_mode = sizing_mode;\n        row_children.push(item);\n      } else {\n        throw new Error(\"only LayoutDOM items can be inserted into Grid\");\n      }\n    }\n    tools = tools.concat(row_tools);\n    row = new models.Row({\n      children: row_children,\n      sizing_mode: sizing_mode\n    });\n    rows.push(row);\n  }\n  grid = new models.Column({\n    children: rows,\n    sizing_mode: sizing_mode\n  });\n  layout = (function() {\n    if (toolbar_location) {\n      toolbar = new models.ToolbarBox({\n        tools: tools,\n        sizing_mode: toolbar_sizing_mode,\n        toolbar_location: toolbar_location\n      });\n      switch (toolbar_location) {\n        case 'above':\n          return new models.Column({\n            children: [toolbar, grid],\n            sizing_mode: sizing_mode\n          });\n        case 'below':\n          return new models.Column({\n            children: [grid, toolbar],\n            sizing_mode: sizing_mode\n          });\n        case 'left':\n          return new models.Row({\n            children: [toolbar, grid],\n            sizing_mode: sizing_mode\n          });\n        case 'right':\n          return new models.Row({\n            children: [grid, toolbar],\n            sizing_mode: sizing_mode\n          });\n      }\n    } else {\n      return grid;\n    }\n  })();\n  return layout;\n};\n\nmodule.exports = {\n  Figure: Figure,\n  figure: figure,\n  show: show,\n  color: color,\n  gridplot: gridplot\n};\n"]}